# -*- coding: utf-8 -*-
"""ModeloTitanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HjO8JUjloddP2VZtyxpdOtHttiSJpeoZ

**Pacotes**
"""

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

"""**Base - Titanic Train**"""

dados = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Digital Innovation One/5 - Introdução a Ciência de Dados/train.csv')

"""**Visualizo a Base**"""

dados.head()

"""**Limpando a base**"""

dados = dados.drop(['Name','Ticket','Cabin','Embarked'], axis = 1 )

"""**Visualizo a Base, após a limpeza**"""

dados.head()

"""**Editando a chave e Variável Resposta**"""

dados = dados.set_index(['PassengerId'])
dados = dados.rename(columns ={'Survived':'target'}, inplace = False)

"""**Análise Descritiva**"""

dados.describe()

dados.describe(include=['O'])

"""**Transformação dos dados**"""

dados['Sex_F'] = np.where(dados['Sex'] == 'female',1,0)
dados['Pclass_1'] = np.where(dados['Pclass'] == 1,1,0)
dados['Pclass_2'] = np.where(dados['Pclass'] == 2,1,0)
dados['Pclass_3'] = np.where(dados['Pclass'] == 3,1,0)

dados =  dados.drop(['Pclass','Sex'], axis = 1)

dados.head()

dados.isnull().sum()

dados.fillna(0, inplace = True)

"""**Amostragem**"""

#Gera amostra
x_train, x_test, y_train, y_test = train_test_split(dados.drop(['target'], axis=1),
                                                     dados["target"],
                                                     test_size = 0.3,
                                                     random_state =1234)
[{'treino': x_train.shape},{'teste': x_test.shape}]

"""**Modelo**"""

rndforest = RandomForestClassifier(n_estimators=1000, criterion= 'gini', max_depth=5)

rndforest.fit(x_train,y_train)

probabilidade = rndforest.predict_proba(dados.drop('target', axis = 1))[:,1]
classificacao = rndforest.predict(dados.drop('target', axis = 1))

dados['probabilidade'] = probabilidade
dados['classificacao'] = classificacao

dados